language: go

go:
  - 1.10.x
  - 1.11.x

install: true

script:
  # make sure it still compiles
  - go build

notifications:
  email: false

# https://coveralls.zendesk.com/hc/en-us/articles/201342809-Go

# matrix:
#   # It's ok if our code fails on unstable development versions of Go.
#   allow_failures:
#     - go: master
#   # Don't wait for tip tests to finish. Mark the test run green if the
#   # tests pass on the stable versions of Go.
#   fast_finish: true
# 
# # Don't email me the results of the test runs.
# 
# # Anything in before_script that returns a nonzero exit code will
# # flunk the build and immediately stop. It's sorta like having
# # set -e enabled in bash. 
# before_script:
#   - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
#   - go get github.com/golang/lint/golint                        # Linter
#   - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
#   - go get github.com/fzipp/gocyclo
#   - go get github.com/franela/goblin                            # Better testing framework
# 
# 
# # script always run to completion (set +e). All of these code checks are must haves
# # in a modern Go project.
# script:
#   - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
#   - go test -v -race ./...                   # Run all the tests with the race detector enabled
#   - go vet ./...                             # go vet is the official Go static analyzer
#   - megacheck ./...                          # "go vet on steroids" + linter
#   - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
#   - golint -set_exit_status $(go list ./...) # one last linter
#
# install:
# - sudo apt-get install alsa-base libasound2-dev
# - go get -t ./...
# #- go get golang.org/x/tools/cmd/cover
# #- go get github.com/mattn/goveralls
# script: ./cover.sh
# after_success:
#  - bash <(curl -s https://codecov.io/bash)
