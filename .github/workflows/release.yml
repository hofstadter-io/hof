name: release (hof)
"on":
  push:
    tags:
      - v*
env:
  HOF_TELEMETRY_DISABLED: "1"
jobs:
  goreleaser:
    environment: hof mod testing
    runs-on: ubuntu-latest
    steps:
      - name: cancel if not our repository
        run: |-
          gh run cancel ${{ github.run_id }}	
          gh run watch  ${{ github.run_id }}	
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.repository != 'hofstadter-io/hof'
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Vars
        id: vars
        run: |-
          SHA=${GITHUB_SHA::8}
          TAG=$(git tag --points-at HEAD)
          echo "HOF_FMT_VERSION=${TAG}" >> $GITHUB_ENV
          if [ -z $TAG ]; then
          	TAG=${SHA}
          fi
          echo "HOF_SHA=${SHA}" >> $GITHUB_ENV
          echo "HOF_TAG=${TAG}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x
      - name: Fetch Go deps
        run: go mod download
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: 1.18.2
          workdir: cmd/hof
          args: release --clean -f goreleaser.yml -p 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy: {}
    services: {}
  formatter:
    strategy:
      fail-fast: false
      matrix:
        formatter:
          - prettier
          - csharpier
          - black
    environment: hof mod testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Vars
        id: vars
        run: |-
          SHA=${GITHUB_SHA::8}
          TAG=$(git tag --points-at HEAD)
          echo "HOF_FMT_VERSION=${TAG}" >> $GITHUB_ENV
          if [ -z $TAG ]; then
          	TAG=${SHA}
          fi
          echo "HOF_SHA=${SHA}" >> $GITHUB_ENV
          echo "HOF_TAG=${TAG}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image
        uses: docker/build-push-action@v3
        with:
          context: formatters/tools/${{ matrix.formatter }}
          file: formatters/tools/${{ matrix.formatter }}/Dockerfile.debian
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/hofstadter-io/fmt-${{ matrix.formatter }}:${{ env.HOF_SHA }},ghcr.io/hofstadter-io/fmt-${{ matrix.formatter }}:${{ env.HOF_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    services: {}
